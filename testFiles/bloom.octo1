digraph {
    0 [label="bad node"]
    1 [label="Label"]
    2 [label="Arg(0)"]
    3 [label="Arg(1)"]
    4 [label="Arg(2)"]
    5 [label="Uniform(0)"]
    6 [label="Uniform(1)"]
    7 [label="Uniform(2)"]
    8 [label="Uniform(3)"]
    9 [label="ExtractComponent"]
    10 [label="ExtractComponent"]
    11 [label="ExtractComponent"]
    12 [label="ConstructVec3"]
    13 [label="Store"]
    14 [label="Store"]
    15 [label="float(0.7)"]
    16 [label="Store"]
    17 [label="ExtractComponent"]
    18 [label="ExtractComponent"]
    19 [label="ExtractComponent"]
    20 [label="ConstructVec3"]
    21 [label="float(0.2126)"]
    22 [label="float(0.7152)"]
    23 [label="float(0.0722)"]
    24 [label="ConstructVec3"]
    25 [label="Std()"]
    26 [label="Store"]
    27 [label="ExtractComponent"]
    28 [label="ExtractComponent"]
    29 [label="ExtractComponent"]
    30 [label="ConstructVec3"]
    31 [label="Store"]
    32 [label="Less"]
    33 [label="JumpIfElse"]
    34 [label="Label"]
    35 [label="float(0)"]
    36 [label="ConstructVec3"]
    37 [label="Store"]
    38 [label="Jump"]
    39 [label="Label"]
    40 [label="Phi"]
    41 [label="ConstructVec3"]
    42 [label="Store"]
    43 [label="float(3)"]
    44 [label="Neg"]
    45 [label="Store"]
    46 [label="Jump"]
    47 [label="Label"]
    48 [label="Phi"]
    49 [label="Phi"]
    50 [label="LoopMerge"]
    51 [label="Jump"]
    52 [label="Label"]
    53 [label="LessEq"]
    54 [label="JumpIfElse"]
    55 [label="Label"]
    56 [label="ConstructVec2"]
    57 [label="Div"]
    58 [label="Sync"]
    59 [label="Shift"]
    60 [label="float(4)"]
    61 [label="Div"]
    62 [label="Std()"]
    63 [label="Neg"]
    64 [label="Std()"]
    65 [label="Mul"]
    66 [label="Div"]
    67 [label="Add"]
    68 [label="Store"]
    69 [label="Jump"]
    70 [label="Label"]
    71 [label="float(1)"]
    72 [label="Add"]
    73 [label="Store"]
    74 [label="Jump"]
    75 [label="Label"]
    76 [label="ExtractComponent"]
    77 [label="ExtractComponent"]
    78 [label="ExtractComponent"]
    79 [label="ConstructVec4"]
    80 [label="Exit"]
    81 [label=""]
    82 [label=""]
    83 [label=""]
    84 [label=""]
    85 [label=""]
    86 [label=""]
    12 -> 13 [label=""]
    8 -> 14 [label=""]
    15 -> 16 [label=""]
    25 -> 26 [label=""]
    30 -> 31 [label=""]
    26 -> 32 [label=""]
    16 -> 32 [label=""]
    32 -> 33 [label="condition"]
    33 -> 34 [label="true"]
    33 -> 39 [label="false"]
    36 -> 37 [label=""]
    37 -> 81 [label=""]
    34 -> 81 [label=""]
    81 -> 40 [label=""]
    31 -> 82 [label=""]
    1 -> 82 [label=""]
    82 -> 40 [label=""]
    39 -> 40 [label="contains"]
    41 -> 42 [label=""]
    43 -> 44 [label=""]
    44 -> 45 [label=""]
    73 -> 83 [label=""]
    70 -> 83 [label=""]
    83 -> 48 [label=""]
    45 -> 84 [label=""]
    39 -> 84 [label=""]
    84 -> 48 [label=""]
    47 -> 48 [label="contains"]
    68 -> 85 [label=""]
    70 -> 85 [label=""]
    85 -> 49 [label=""]
    42 -> 86 [label=""]
    39 -> 86 [label=""]
    86 -> 49 [label=""]
    47 -> 49 [label="contains"]
    48 -> 53 [label=""]
    43 -> 53 [label=""]
    53 -> 54 [label="condition"]
    54 -> 55 [label="true"]
    54 -> 75 [label="false"]
    56 -> 57 [label=""]
    14 -> 57 [label=""]
    40 -> 58 [label=""]
    58 -> 59 [label=""]
    57 -> 59 [label=""]
    48 -> 61 [label=""]
    60 -> 61 [label=""]
    62 -> 63 [label=""]
    59 -> 65 [label=""]
    64 -> 65 [label=""]
    65 -> 66 [label=""]
    60 -> 66 [label=""]
    49 -> 67 [label=""]
    66 -> 67 [label=""]
    67 -> 68 [label=""]
    48 -> 72 [label=""]
    71 -> 72 [label=""]
    72 -> 73 [label=""]
    79 -> 80 [label=""]
    75 -> 80 [label=""]
}
